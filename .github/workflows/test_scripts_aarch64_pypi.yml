############################################################
# -*- coding: utf-8 -*-
#
#       #   #  #   #   #    #
#      ##  ##  #  ##  #    #
#     # # # #  # # # #    #  #
#    #  ##  #  ##  ##    ######
#   #   #   #  #   #       #
#
# Python-based Tool for interaction with the 10micron mounts
# GUI with PySide6 for python3
#
# written in python3, (c) 2019-2025 by mworion
# Licence APL2.0
#
###########################################################

name: test_scripts_aarch64_pypi

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  gh: 'https://raw.githubusercontent.com/mworion/InstallerMW4/main/support/'
  version: '-v 4.0.0a26'

on:
  push:
    # Run this action on the trigger event when specific files are touched
    paths:
      - '.github/workflows/test_scripts_aarch64_pypi.yml'
      - 'support/**'
      - 'setup.py'

jobs:
  
  install_package_aarch64:
    runs-on: ubuntu-24.04
    if: |
      ( github.event_name == 'workflow_run'  && github.event.workflow_run.conclusion == 'success' ) ||
      github.event_name == 'push'
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            distro: bookworm

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Script Run
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: ${{ env.gh }}startup.pyz
          target: .

      - uses: uraimo/run-on-arch-action@v3
        name: build_artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Mount the wheels directory as /artifacts in the container
          dockerRunArgs: |
            -v "${PWD}":/root

          # The shell to run commands with in the container
          shell: /bin/bash

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -y
            apt-get upgrade -y
            apt-get install -y python3.12
            apt-get install -y python3-dev python3-venv
            apt-get install -y python3-pip python3-wheel
            apt-get install -y xvfb libxkbcommon-x11-0 x11-utils libxcb-icccm4
            apt-get install -y libxcb-image0 libxcb-keysyms1 libxcb-randr0
            apt-get install -y libxcb-render-util0 libpulse-mainloop-glib0
            apt-get install -y libx11-xcb1 libxcb-xinerama0 libxcb-xkb1
            apt-get install -y libxcb-keysyms1

          # Produce a binary artifact and place it in the mounted volume
          run: |
            python3 --version
            ls /root/*.*
            cd /root
            python3 startup.pyz --no-start ${{ env.version }}
