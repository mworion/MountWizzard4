#
# GitHub actions for checking the installation of mountwizzard4 packages
#
# v 1.0, Michael Wuertenberger
#
name: test_scripts_packages

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  gh: 'https://raw.githubusercontent.com/mworion/MountWizzard4/master/support/'
  wid: 'mw4/gui/widgets/'
  uic: 'python -m PyQt5.uic.pyuic'
  ucc: 'python -m PyQt5.pyrcc_main'
  res: 'mw4/resource/'

on:
  push:
    # Run this action on the trigger event when specific files are touched
    paths:
      - 'setup.py'
      - 'support/**'
      - '.github/workflows/test_scripts_packages.yml'

jobs:
  build_widgets_resource:
    runs-on: 'ubuntu-22.04'
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-python-environment
      with:
        path: ~/.env
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
          
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: build_widgets_resource
      run: |
        python -m pip install PyQt5
        ${{env.uic}} ${{env.wid}}devicePopup.ui -o ${{env.wid}}devicePopup_ui.py
        ${{env.uic}} ${{env.wid}}downloadPopup.ui -o ${{env.wid}}downloadPopup_ui.py
        ${{env.uic}} ${{env.wid}}hemisphere.ui -o ${{env.wid}}hemisphere_ui.py
        ${{env.uic}} ${{env.wid}}image.ui -o ${{env.wid}}image_ui.py
        ${{env.uic}} ${{env.wid}}keypad.ui -o ${{env.wid}}keypad_ui.py
        ${{env.uic}} ${{env.wid}}main.ui -o ${{env.wid}}main_ui.py
        ${{env.uic}} ${{env.wid}}measure.ui -o ${{env.wid}}measure_ui.py
        ${{env.uic}} ${{env.wid}}message.ui -o ${{env.wid}}message_ui.py
        ${{env.uic}} ${{env.wid}}satellite.ui -o ${{env.wid}}satellite_ui.py
        ${{env.uic}} ${{env.wid}}analyse.ui -o ${{env.wid}}analyse_ui.py
        ${{env.uic}} ${{env.wid}}simulator.ui -o ${{env.wid}}simulator_ui.py
        ${{env.ucc}} ${{env.res}}resources.qrc -o ${{env.res}}resources.py

    - name: build_package
      run: |
        python -m pip install setuptools wheel
        python setup.py sdist
        mv dist/mountwizzard4*.* dist/mountwizzard4.tar.gz

    - name: upload_package
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist
        
  install_package_windows:
    needs: [build_widgets_resource]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v4
  
      - name: setup_python_windows ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
  
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Script Install
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: ${{ env.gh }}3.0/startupPackage.zip
          target: dist/
          
      - name: MountWizzard4 Install
        continue-on-error: true
        shell: cmd
        run: |
          cd dist
          python -m pip install --upgrade pip
          python -m zipfile -e startupPackage.zip .
          python startup.pyz --no-start
          dir
          
      - name: Run MountWizzard4
        shell: cmd
        run: |
          cd dist
          touch test.run
          python startup.pyz
          dir

  install_package_ubuntu:
    needs: [build_widgets_resource]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v4
  
      - name: setup_python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
  
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Head
        run: |
          sudo apt-get update
          sudo apt-get -y upgrade
          sudo apt-get install -y xvfb libxkbcommon-x11-0 x11-utils libxcb-icccm4
          sudo apt-get install -y libxcb-image0 libxcb-keysyms1 libxcb-randr0
          sudo apt-get install -y libxcb-render-util0 libpulse-mainloop-glib0
          sudo apt-get install -y libx11-xcb1 libxcb-xinerama0 libxcb-xkb1
          sudo apt-get install -y libxcb-keysyms1

      - name: Install Script Run
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: ${{ env.gh }}3.0/startupPackage.zip
          target: dist/
          
      - name: MountWizzard4 Install
        run: |
          cd dist
          python3 -m pip install --upgrade pip
          python3 -m zipfile -e startupPackage.zip .
          python3 startup.pyz --no-start
          ls -la
          
      - name: Run MountWizzard4
        run: |
          cd dist
          touch test.run
          xvfb-run python3 startup.pyz
          ls -la


  install_package_macOS:
    needs: [build_widgets_resource]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v4
      - name: setup_python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
  
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Script Run
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url: ${{ env.gh }}3.0/startupPackage.zip
          target: dist/
          
      - name: MountWizzard4 Install
        run: |
          cd dist
          python3 -m pip install --upgrade pip
          python3 -m zipfile -e startupPackage.zip .
          python3 startup.pyz --no-start
          ls -la
          
      - name: Run MountWizzard4
        run: |
          cd dist
          touch test.run
          python3 startup.pyz
          ls -la

  install_aarch64:
    needs: [build_widgets_resource]
    # The host should always be linux
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 3 arch/distro combinations
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu20.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: support/3.0

      - uses: uraimo/run-on-arch-action@v2
        name: build_artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Mount the wheels directory as /artifacts in the container
          dockerRunArgs: |
            -v "${PWD}/support":/root/support

          # The shell to run commands with in the container
          shell: /bin/bash
          install: |
            apt-get update -y
            apt-get upgrade -y
            apt-get -y install python3-pip python3-venv python3-wheel
            apt-get -y install python3-pyqt5
            python -m pip install pip --upgrade
            
          # Produce a binary artifact and place it in the mounted volume
          run: |
            python3 --version
            python3 -m pip install --upgrade pip
            cd /root/support/3.0
            python3 -m zipfile -e startupPackage.zip .
            python3 startup.pyz --no-start
            cat ./log/mw4*.log
            ls -la
