#
# v1.1, Michael Wuertenberger
#
name: unit_win

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  branch: '3.2.0'
  cov: '--cov=mw4/ --cov-append'

on:
  push:
    # Run this action on the trigger event when specific files are touched
    paths:
      - 'mw4/**'
      - 'tests/unit_tests/**'
      - 'setup.py'
      - 'tox.ini'
      - '.github/workflows/unit_win.yml'
      - '.github/actions/build_package/action.yml'
      - '.github/actions/setup_test/action.yml'
jobs:
  build_package:
    #
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
          
      - name: build package
        uses: ./.github/actions/build_package

  run_tests_windows_1:
    #
    needs: build_package
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/zLoader ${{env.cov}}
          pytest tests/unit_tests/zUpdate ${{env.cov}}
          pytest tests/unit_tests/zMainApp ${{env.cov}}
          
      - name: rename_coveragefile
        run: mv .coverage c1.dat

      - uses: actions/upload-artifact@v4
        with:
          name: c1
          path: c1.dat

  run_tests_windows_2:
    #
    needs: build_package
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/base ${{env.cov}}
          pytest tests/unit_tests/logic ${{env.cov}}
          pytest tests/unit_tests/mountcontrol ${{env.cov}}
          pytest tests/unit_tests/indibase ${{env.cov}}
          
      - name: rename_coveragefile
        run: mv .coverage c2.dat
        
      - uses: actions/upload-artifact@v4
        with:
          name: c2
          path: c2.dat

  run_tests_windows_3:
    #
    needs: build_package
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/gui/mainWindow ${{env.cov}}
          pytest tests/unit_tests/gui/extWindows ${{env.cov}}
          pytest tests/unit_tests/gui/utilities ${{env.cov}}
          
      - name: rename_coveragefile
        run: mv .coverage c3.dat
        
      - uses: actions/upload-artifact@v4
        with:
          name: c3
          path: c3.dat

  run_tests_windows_4:
    #
    needs: build_package
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/gui/mainWmixin1 ${{env.cov}}

      - name: rename_coveragefile
        run: mv .coverage c4.dat
        
      - uses: actions/upload-artifact@v4
        with:
          name: c4
          path: c4.dat

  run_tests_windows_5:
    #
    needs: build_package
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/gui/mainWmixin2 ${{env.cov}}

      - name: rename_coveragefile
        run: mv .coverage c5.dat
        
      - uses: actions/upload-artifact@v4
        with:
          name: c5
          path: c5.dat

  run_tests_windows_6:
    #
    needs: build_package
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/gui/mainWmixin3 ${{env.cov}}

      - name: rename_coveragefile
        run: mv .coverage c6.dat
        
      - uses: actions/upload-artifact@v4
        with:
          name: c6
          path: c6.dat

  coverage:
    #
    needs: [ run_tests_windows_1, run_tests_windows_2,
             run_tests_windows_3, run_tests_windows_4,
             run_tests_windows_5, run_tests_windows_6]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{env.branch}}
        
    - uses: actions/download-artifact@v4
      with:
        name: c1
    - uses: actions/download-artifact@v4
      with:
        name: c2
    - uses: actions/download-artifact@v4
      with:
        name: c3
    - uses: actions/download-artifact@v4
      with:
        name: c4
    - uses: actions/download-artifact@v4
      with:
        name: c5
    - uses: actions/download-artifact@v4
      with:
        name: c6

    - name: combining_data
      run: |
        dir
        python -m pip install coverage
        python -m coverage combine c1.dat c2.dat c3.dat c4.dat c5.dat c6.dat
        python -m coverage xml

    - name: upload
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        env_vars: OS,PYTHON
        override_branch: ${{env.branch}}
